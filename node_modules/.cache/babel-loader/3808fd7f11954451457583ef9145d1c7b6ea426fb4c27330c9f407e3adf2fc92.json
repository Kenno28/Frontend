{"ast":null,"code":"import React,{createContext,useContext}from\"react\";// export only for provider\nexport const LoginContext=/*#__PURE__*/React.createContext({});// export for consumers\nexport const useLoginContext=()=>useContext(LoginContext);//mein eigenes f端r die Rolle des Users\nexport const ProtokollContext=/*#__PURE__*/createContext({});export const useProtokollContext=()=>useContext(ProtokollContext);//mein eigenes f端r ShowLogin\nexport const ShowLogin=/*#__PURE__*/createContext({});export const useShowLoginContext=()=>useContext(ShowLogin);","map":{"version":3,"names":["React","createContext","useContext","LoginContext","useLoginContext","ProtokollContext","useProtokollContext","ShowLogin","useShowLoginContext"],"sources":["C:/Users/erayz/Dropbox/Semester 3/Web II/we2.blatt12/src/components/Context.tsx"],"sourcesContent":["import React, { createContext, useContext } from \"react\";\r\nimport { ProtokollResource } from \"../Resources\";\r\n\r\nexport interface LoginInfo {\r\n    userId: string;\r\n   }\r\n   export interface LoginContextType {\r\n    loginInfo: LoginInfo | false | undefined;\r\n    setLoginInfo: (loginInfo: LoginInfo | false) => void\r\n   }\r\n\r\n// export only for provider\r\nexport const LoginContext = React.createContext<LoginContextType>({} as LoginContextType);\r\n\r\n// export for consumers\r\nexport const useLoginContext = () => useContext(LoginContext);\r\n\r\n//mein eigenes f端r die Rolle des Users\r\n\r\nexport interface ProtokollContextType {\r\n    getPro: ProtokollResource[] | undefined;\r\n    setPro: (getPro: ProtokollResource[] | undefined) => void\r\n}\r\n\r\nexport const ProtokollContext = createContext<ProtokollContextType>({} as ProtokollContextType);\r\n\r\nexport const useProtokollContext = () => useContext(ProtokollContext);\r\n\r\n\r\n//mein eigenes f端r ShowLogin\r\nexport interface showLoginContextType {\r\n    showLogin: Boolean | undefined;\r\n    setShowLogin: (showLogin: Boolean) => void\r\n}\r\n\r\nexport const ShowLogin = createContext<showLoginContextType>({} as showLoginContextType);\r\n\r\nexport const useShowLoginContext = () => useContext(ShowLogin);\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAWxD;AACA,MAAO,MAAM,CAAAC,YAAY,cAAGH,KAAK,CAACC,aAAa,CAAmB,CAAC,CAAqB,CAAC,CAEzF;AACA,MAAO,MAAM,CAAAG,eAAe,CAAGA,CAAA,GAAMF,UAAU,CAACC,YAAY,CAAC,CAE7D;AAOA,MAAO,MAAM,CAAAE,gBAAgB,cAAGJ,aAAa,CAAuB,CAAC,CAAyB,CAAC,CAE/F,MAAO,MAAM,CAAAK,mBAAmB,CAAGA,CAAA,GAAMJ,UAAU,CAACG,gBAAgB,CAAC,CAGrE;AAMA,MAAO,MAAM,CAAAE,SAAS,cAAGN,aAAa,CAAuB,CAAC,CAAyB,CAAC,CAExF,MAAO,MAAM,CAAAO,mBAAmB,CAAGA,CAAA,GAAMN,UAAU,CAACK,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}