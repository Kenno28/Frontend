{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erayz\\\\Dropbox\\\\Semester 3\\\\Web II\\\\we2.blatt12\\\\src\\\\components\\\\PageEintrag.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getEintrag } from \"../backend/api\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport '../CSS/PageProtokoll.css';\nimport PageError from \"./Error\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageEintrag() {\n  _s();\n  const params = useParams();\n  const eintragID = params.eintragId;\n  const [myEntries, setMyEntries] = useState();\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    async function load() {\n      try {\n        const c = await getEintrag(eintragID);\n        setMyEntries(c);\n      } catch (error) {\n        if (error instanceof Error) {\n          if (error instanceof Error) {\n            const err = error.message.match(/\\b\\d{3}\\b/); // \\b = Postion zwischen einem Wortzeichen und Nicht-Wortzeichen, \\d = nur Zahlen\n            const errToNo = err ? Number.parseInt(err === null || err === void 0 ? void 0 : err[0]) : NaN;\n            if (isNaN(errToNo)) {\n              setError(500);\n            } else {\n              setError(errToNo); //Hier setzen wir den Fehler\n            }\n          }\n        }\n      }\n    }\n    load();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  async function deleteEintrag(Id) {\n    await deleteEintrag(Id);\n  }\n  if (!myEntries) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Background\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Getr\\xE4nk: \", myEntries.getraenk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Menge: \", myEntries.menge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Kommentar: \", myEntries.kommentar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"erstellerName: \", myEntries.erstellerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Erstellt am: \", myEntries.createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n        to: `/protokoll`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          as: \"input\",\n          type: \"button\",\n          onClick: () => deleteEintrag(myEntries.id),\n          value: \"L\\xF6schen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this);\n  }\n}\n_s(PageEintrag, \"5z+LLUAQF9mkHqQnq2M5FCXxNiY=\", false, function () {\n  return [useParams];\n});\n_c = PageEintrag;\nvar _c;\n$RefreshReg$(_c, \"PageEintrag\");","map":{"version":3,"names":["useEffect","useState","useParams","getEintrag","LoadingIndicator","PageError","LinkContainer","Button","jsxDEV","_jsxDEV","PageEintrag","_s","params","eintragID","eintragId","myEntries","setMyEntries","error","setError","undefined","load","c","Error","err","message","match","errToNo","Number","parseInt","NaN","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","deleteEintrag","Id","className","children","getraenk","menge","kommentar","erstellerName","createdAt","to","size","as","type","onClick","id","value","_c","$RefreshReg$"],"sources":["C:/Users/erayz/Dropbox/Semester 3/Web II/we2.blatt12/src/components/PageEintrag.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { EintragResource} from \"../Resources\";\r\nimport { getEintrag} from \"../backend/api\";\r\nimport { LoadingIndicator } from \"./LoadingIndicator\";\r\nimport '../CSS/PageProtokoll.css';\r\nimport PageError from \"./Error\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nexport default function  PageEintrag(){\r\n\r\n    \r\n    const params = useParams();\r\n    const eintragID = params.eintragId;\r\n\r\n    const [myEntries, setMyEntries] =  useState<EintragResource| null>();\r\n    const [error, setError] =  useState<Number | undefined>(undefined);\r\n\r\n    \r\n    useEffect(() => { async function load() {\r\n        try{   \r\n        const c = await getEintrag(eintragID!);\r\n       \r\n        setMyEntries(c);\r\n      \r\n        } \r\n        catch(error){\r\n            if (error instanceof Error){\r\n                \r\n                if (error instanceof Error){ \r\n               \r\n                    const err = error.message.match(/\\b\\d{3}\\b/)// \\b = Postion zwischen einem Wortzeichen und Nicht-Wortzeichen, \\d = nur Zahlen\r\n                    const errToNo: number =err ? Number.parseInt(err?.[0]!) : NaN;\r\n\r\n                    if(isNaN(errToNo)){\r\n                        setError(500);\r\n                    }else{\r\n                        setError(errToNo); //Hier setzen wir den Fehler\r\n                    }\r\n   \r\n               }\r\n            }\r\n        }\r\n   \r\n    } load()}, []);\r\n\r\n   if(error){\r\n    return <PageError error={error}/>\r\n   }\r\n\r\n\r\n   async function deleteEintrag(Id: string) {\r\n        await deleteEintrag(Id);\r\n   }\r\n\r\n    if (!myEntries) {\r\n        return <LoadingIndicator/>\r\n    } else{\r\n       \r\n\r\n        return (\r\n            (\r\n                <div className=\"Background\">\r\n                <p>Getränk: {myEntries.getraenk}</p>\r\n                <p>Menge: {myEntries.menge}</p>\r\n                <p>Kommentar: {myEntries.kommentar}</p>\r\n                <p>erstellerName: {myEntries.erstellerName}</p>\r\n                <p>Erstellt am: {myEntries.createdAt}</p>\r\n\r\n                <LinkContainer to={`/protokoll`}>\r\n                <Button size=\"sm\" as=\"input\" type=\"button\" onClick={() => deleteEintrag(myEntries.id!)} value=\"Löschen\"/>\r\n                </LinkContainer>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}