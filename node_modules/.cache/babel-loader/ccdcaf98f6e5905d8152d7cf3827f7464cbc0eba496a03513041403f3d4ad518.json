{"ast":null,"code":"var _jsxFileName = \"/Users/melisazor/Desktop/Dropbox/Semester 3/Web II/we2.blatt12/src/components/AlleProtokolle.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport '../CSS/PageIndex.css';\nimport { getAlleProtokolle } from \"../backend/api\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useLoginContext } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlleProtokolle() {\n  _s();\n  const [myEntries, setMyEntries] = useState([]);\n  const {\n    loginInfo\n  } = useLoginContext();\n  async function load() {\n    try {\n      let c = await getAlleProtokolle();\n      setMyEntries(c);\n    } catch (e) {}\n  }\n  useEffect(() => {\n    load();\n  }, [loginInfo]);\n  if (!myEntries) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"Liste\",\n      children: myEntries.map(myEntry => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"Items\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: myEntry.patient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Datum: \", myEntry.datum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Public: \", myEntry.public ? \"true\" : \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Closed: \", myEntry.closed ? \"true\" : \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ersteller: \", myEntry.erstellerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Zuletzt Bearbeitet: \", myEntry.updatedAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Gesamt Menge: \", myEntry.gesamtMenge]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n          to: `protokoll/${myEntry.id}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            as: \"input\",\n            type: \"button\",\n            value: \"Anschauen\",\n            className: \"Butt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, myEntry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(AlleProtokolle, \"3zvC0MD9WrjVNuob+9i4QQziOV4=\", false, function () {\n  return [useLoginContext];\n});\n_c = AlleProtokolle;\nvar _c;\n$RefreshReg$(_c, \"AlleProtokolle\");","map":{"version":3,"names":["useEffect","useState","getAlleProtokolle","LoadingIndicator","Button","ListGroup","LinkContainer","useLoginContext","jsxDEV","_jsxDEV","AlleProtokolle","_s","myEntries","setMyEntries","loginInfo","load","c","e","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","myEntry","Item","patient","datum","public","closed","erstellerName","updatedAt","gesamtMenge","to","id","size","as","type","value","_c","$RefreshReg$"],"sources":["/Users/melisazor/Desktop/Dropbox/Semester 3/Web II/we2.blatt12/src/components/AlleProtokolle.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport '../CSS/PageIndex.css';\nimport { getAlleProtokolle } from \"../backend/api\";\nimport { ProtokollResource } from \"../Resources\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useLoginContext } from \"./Context\";\n\nexport default function AlleProtokolle() {\n    const [myEntries, setMyEntries] = useState<ProtokollResource[] | null>([]);\n    const {loginInfo} = useLoginContext();\n\n    async function load() {\n     try{\n        let c = await getAlleProtokolle();\n        setMyEntries(c);\n     } catch(e){\n\n     }\n        \n    }\n\n    useEffect(() => {\n    load(); }, [loginInfo]);\n\n    if (!myEntries) {\n        return <LoadingIndicator />\n    } else {\n        return (\n            <ListGroup className=\"Liste\">\n            {myEntries.map(myEntry => ( \n                    <ListGroup.Item className=\"Items\" key={myEntry.id}>\n                    <h3>{myEntry.patient}</h3>\n                    <p>Datum: {myEntry.datum}</p>\n                    <p>Public: {myEntry.public ? \"true\" : \"false\"}</p>\n                    <p>Closed: {myEntry.closed ? \"true\" : \"false\"}</p>\n                    <p>Ersteller: {myEntry.erstellerName}</p>\n                    <p>Zuletzt Bearbeitet: {myEntry.updatedAt}</p>\n                    <p>Gesamt Menge: {myEntry.gesamtMenge}</p>\n\n                    <LinkContainer to={`protokoll/${myEntry.id}`}> \n                    <Button size=\"sm\" as=\"input\" type=\"button\" value=\"Anschauen\" className=\"Butt\"/>\n                    </LinkContainer>\n                    </ListGroup.Item>\n            ))}\n              </ListGroup> \n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}