{"ast":null,"code":"import{useEffect,useState}from\"react\";import'../CSS/PageIndex.css';import{getAlleProtokolle}from\"../backend/api\";import{LoadingIndicator}from\"./LoadingIndicator\";import{Button,ListGroup}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";import{useLoginContext,useProtokollContext}from\"./Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AlleProtokolle(){const[myEntries,setMyEntries]=useState([]);const{loginInfo}=useLoginContext();const{getPro,setPro}=useProtokollContext();async function load(){try{let c=await getAlleProtokolle();setMyEntries(c);setPro(c);}catch(e){}console.log(\"WURDE AUSGELÖST\");}useEffect(()=>{load();},[loginInfo]);if(!myEntries){return/*#__PURE__*/_jsx(LoadingIndicator,{});}else{return/*#__PURE__*/_jsx(ListGroup,{className:\"Liste\",children:myEntries.map(myEntry=>/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"Items\",children:[/*#__PURE__*/_jsx(\"h3\",{children:myEntry.patient}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Datum: \",myEntry.datum]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Public: \",myEntry.public?\"true\":\"false\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Closed: \",myEntry.closed?\"true\":\"false\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Ersteller: \",myEntry.erstellerName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Zuletzt Bearbeitet: \",myEntry.updatedAt]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Gesamt Menge: \",myEntry.gesamtMenge]}),/*#__PURE__*/_jsx(LinkContainer,{to:\"protokoll/\".concat(myEntry.id),children:/*#__PURE__*/_jsx(Button,{size:\"sm\",as:\"input\",type:\"button\",value:\"Anschauen\",className:\"Butt\"})})]},myEntry.id))});}}","map":{"version":3,"names":["useEffect","useState","getAlleProtokolle","LoadingIndicator","Button","ListGroup","LinkContainer","useLoginContext","useProtokollContext","jsx","_jsx","jsxs","_jsxs","AlleProtokolle","myEntries","setMyEntries","loginInfo","getPro","setPro","load","c","e","console","log","className","children","map","myEntry","Item","patient","datum","public","closed","erstellerName","updatedAt","gesamtMenge","to","concat","id","size","as","type","value"],"sources":["C:/Users/erayz/Dropbox/Semester 3/Web II/we2.blatt12/src/components/AlleProtokolle.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport '../CSS/PageIndex.css';\nimport { getAlleProtokolle } from \"../backend/api\";\nimport { ProtokollResource } from \"../Resources\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useLoginContext, useProtokollContext } from \"./Context\";\n\nexport default function AlleProtokolle() {\n    const [myEntries, setMyEntries] = useState<ProtokollResource[] | null>([]);\n    const {loginInfo} = useLoginContext();\n    const {getPro, setPro} = useProtokollContext(); \n\n    async function load() {\n     try{\n        let c = await getAlleProtokolle();\n        setMyEntries(c);\n        setPro(c);\n     } catch(e){\n\n     }\n        console.log(\"WURDE AUSGELÖST\")\n    }\n\n    useEffect(() => {\n    load(); }, [loginInfo]);\n\n    if (!myEntries) {\n        return <LoadingIndicator />\n    } else {\n        return (\n            <ListGroup className=\"Liste\">\n            {myEntries.map(myEntry => ( \n                    <ListGroup.Item className=\"Items\" key={myEntry.id}>\n                    <h3>{myEntry.patient}</h3>\n                    <p>Datum: {myEntry.datum}</p>\n                    <p>Public: {myEntry.public ? \"true\" : \"false\"}</p>\n                    <p>Closed: {myEntry.closed ? \"true\" : \"false\"}</p>\n                    <p>Ersteller: {myEntry.erstellerName}</p>\n                    <p>Zuletzt Bearbeitet: {myEntry.updatedAt}</p>\n                    <p>Gesamt Menge: {myEntry.gesamtMenge}</p>\n\n                    <LinkContainer to={`protokoll/${myEntry.id}`}> \n                    <Button size=\"sm\" as=\"input\" type=\"button\" value=\"Anschauen\" className=\"Butt\"/>\n                    </LinkContainer>\n                    </ListGroup.Item>\n            ))}\n              </ListGroup> \n        );\n    }\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,sBAAsB,CAC7B,OAASC,iBAAiB,KAAQ,gBAAgB,CAElD,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,MAAM,CAAEC,SAAS,KAAQ,iBAAiB,CACnD,OAASC,aAAa,KAAQ,wBAAwB,CACtD,OAASC,eAAe,CAAEC,mBAAmB,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjE,cAAe,SAAS,CAAAC,cAAcA,CAAA,CAAG,CACrC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAA6B,EAAE,CAAC,CAC1E,KAAM,CAACe,SAAS,CAAC,CAAGT,eAAe,CAAC,CAAC,CACrC,KAAM,CAACU,MAAM,CAAEC,MAAM,CAAC,CAAGV,mBAAmB,CAAC,CAAC,CAE9C,cAAe,CAAAW,IAAIA,CAAA,CAAG,CACrB,GAAG,CACA,GAAI,CAAAC,CAAC,CAAG,KAAM,CAAAlB,iBAAiB,CAAC,CAAC,CACjCa,YAAY,CAACK,CAAC,CAAC,CACfF,MAAM,CAACE,CAAC,CAAC,CACZ,CAAE,MAAMC,CAAC,CAAC,CAEV,CACGC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAClC,CAEAvB,SAAS,CAAC,IAAM,CAChBmB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAACH,SAAS,CAAC,CAAC,CAEvB,GAAI,CAACF,SAAS,CAAE,CACZ,mBAAOJ,IAAA,CAACP,gBAAgB,GAAE,CAAC,CAC/B,CAAC,IAAM,CACH,mBACIO,IAAA,CAACL,SAAS,EAACmB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAC3BX,SAAS,CAACY,GAAG,CAACC,OAAO,eACdf,KAAA,CAACP,SAAS,CAACuB,IAAI,EAACJ,SAAS,CAAC,OAAO,CAAAC,QAAA,eACjCf,IAAA,OAAAe,QAAA,CAAKE,OAAO,CAACE,OAAO,CAAK,CAAC,cAC1BjB,KAAA,MAAAa,QAAA,EAAG,SAAO,CAACE,OAAO,CAACG,KAAK,EAAI,CAAC,cAC7BlB,KAAA,MAAAa,QAAA,EAAG,UAAQ,CAACE,OAAO,CAACI,MAAM,CAAG,MAAM,CAAG,OAAO,EAAI,CAAC,cAClDnB,KAAA,MAAAa,QAAA,EAAG,UAAQ,CAACE,OAAO,CAACK,MAAM,CAAG,MAAM,CAAG,OAAO,EAAI,CAAC,cAClDpB,KAAA,MAAAa,QAAA,EAAG,aAAW,CAACE,OAAO,CAACM,aAAa,EAAI,CAAC,cACzCrB,KAAA,MAAAa,QAAA,EAAG,sBAAoB,CAACE,OAAO,CAACO,SAAS,EAAI,CAAC,cAC9CtB,KAAA,MAAAa,QAAA,EAAG,gBAAc,CAACE,OAAO,CAACQ,WAAW,EAAI,CAAC,cAE1CzB,IAAA,CAACJ,aAAa,EAAC8B,EAAE,cAAAC,MAAA,CAAeV,OAAO,CAACW,EAAE,CAAG,CAAAb,QAAA,cAC7Cf,IAAA,CAACN,MAAM,EAACmC,IAAI,CAAC,IAAI,CAACC,EAAE,CAAC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAACC,KAAK,CAAC,WAAW,CAAClB,SAAS,CAAC,MAAM,CAAC,CAAC,CAChE,CAAC,GAXuBG,OAAO,CAACW,EAY/B,CACvB,CAAC,CACW,CAAC,CAEtB,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}