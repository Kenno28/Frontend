{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erayz\\\\Dropbox\\\\Semester 3\\\\Web II\\\\we2.blatt12\\\\src\\\\components\\\\PageEintrag.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { deleteEitnrag, getEintrag } from \"../backend/api\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport \"../CSS/PageProtokoll.css\";\nimport PageError from \"./Error\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageEintrag() {\n  _s();\n  const params = useParams();\n  const eintragID = params.eintragId;\n  const [myEntries, setMyEntries] = useState();\n  const [error, setError] = useState(undefined);\n  const [getDelete, setDelete] = useState(false);\n  const [geEdit, setEdit] = useState(false);\n  useEffect(() => {\n    async function load() {\n      try {\n        const c = await getEintrag(eintragID);\n        setMyEntries(c);\n      } catch (error) {\n        if (error instanceof Error) {\n          if (error instanceof Error) {\n            const err = error.message.match(/\\b\\d{3}\\b/); // \\b = Postion zwischen einem Wortzeichen und Nicht-Wortzeichen, \\d = nur Zahlen\n            const errToNo = err ? Number.parseInt(err === null || err === void 0 ? void 0 : err[0]) : NaN;\n            if (isNaN(errToNo)) {\n              setError(500);\n            } else {\n              setError(errToNo); //Hier setzen wir den Fehler\n            }\n          }\n        }\n      }\n    }\n    load();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  async function deleteEintragFunc(Id) {\n    await deleteEitnrag(Id);\n  }\n  if (!myEntries) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Background\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Getr\\xE4nk: \", myEntries.getraenk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Menge: \", myEntries.menge]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Kommentar: \", myEntries.kommentar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"erstellerName: \", myEntries.erstellerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Erstellt am: \", myEntries.createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        as: \"input\",\n        type: \"button\",\n        onClick: () => setDelete(true),\n        value: \"L\\xF6schen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        as: \"input\",\n        type: \"button\",\n        onClick: () => setEdit(true),\n        value: \"Editieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: getDelete,\n        backdrop: \"static\",\n        keyboard: false,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Wollen Sie diesen Eintrag wirklich l\\xF6schen?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"ModalButton\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"ModalButton\",\n            onClick: () => setDelete(false),\n            children: \"Abbrechen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n            to: `/protokoll/${myEntries.protokoll}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"ModalButton\",\n              onClick: () => deleteEintragFunc(myEntries.id),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(PageEintrag, \"IZBh3TWnkcp/BtvnMdDCLG3ChhM=\", false, function () {\n  return [useParams];\n});\n_c = PageEintrag;\nvar _c;\n$RefreshReg$(_c, \"PageEintrag\");","map":{"version":3,"names":["useEffect","useState","useParams","deleteEitnrag","getEintrag","LoadingIndicator","PageError","LinkContainer","Button","Modal","jsxDEV","_jsxDEV","PageEintrag","_s","params","eintragID","eintragId","myEntries","setMyEntries","error","setError","undefined","getDelete","setDelete","geEdit","setEdit","load","c","Error","err","message","match","errToNo","Number","parseInt","NaN","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","deleteEintragFunc","Id","className","children","getraenk","menge","kommentar","erstellerName","createdAt","size","as","type","onClick","value","show","backdrop","keyboard","Header","Title","Body","to","protokoll","id","_c","$RefreshReg$"],"sources":["C:/Users/erayz/Dropbox/Semester 3/Web II/we2.blatt12/src/components/PageEintrag.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { EintragResource } from \"../Resources\";\r\nimport { deleteEitnrag, getEintrag } from \"../backend/api\";\r\nimport { LoadingIndicator } from \"./LoadingIndicator\";\r\nimport \"../CSS/PageProtokoll.css\";\r\nimport PageError from \"./Error\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport default function PageEintrag() {\r\n  const params = useParams();\r\n  const eintragID = params.eintragId;\r\n\r\n  const [myEntries, setMyEntries] = useState<EintragResource | null>();\r\n  const [error, setError] = useState<Number | undefined>(undefined);\r\n  const [getDelete, setDelete] = useState(false);\r\n  const [geEdit, setEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n      try {\r\n        const c = await getEintrag(eintragID!);\r\n\r\n        setMyEntries(c);\r\n      } catch (error) {\r\n        if (error instanceof Error) {\r\n          if (error instanceof Error) {\r\n            const err = error.message.match(/\\b\\d{3}\\b/); // \\b = Postion zwischen einem Wortzeichen und Nicht-Wortzeichen, \\d = nur Zahlen\r\n            const errToNo: number = err ? Number.parseInt(err?.[0]!) : NaN;\r\n\r\n            if (isNaN(errToNo)) {\r\n              setError(500);\r\n            } else {\r\n              setError(errToNo); //Hier setzen wir den Fehler\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    load();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <PageError error={error} />;\r\n  }\r\n\r\n  async function deleteEintragFunc(Id: string) {\r\n    await deleteEitnrag(Id);\r\n  }\r\n\r\n  if (!myEntries) {\r\n    return <LoadingIndicator />;\r\n  } else {\r\n    return (\r\n      <div className=\"Background\">\r\n        <p>Getränk: {myEntries.getraenk}</p>\r\n        <p>Menge: {myEntries.menge}</p>\r\n        <p>Kommentar: {myEntries.kommentar}</p>\r\n        <p>erstellerName: {myEntries.erstellerName}</p>\r\n        <p>Erstellt am: {myEntries.createdAt}</p> \r\n\r\n  \r\n          <Button\r\n            size=\"sm\"\r\n            as=\"input\"\r\n            type=\"button\"\r\n            onClick={() => setDelete(true)}\r\n            value=\"Löschen\"\r\n          />\r\n\r\n            <Button\r\n            size=\"sm\"\r\n            as=\"input\"\r\n            type=\"button\"\r\n            onClick={() => setEdit(true)}\r\n            value=\"Editieren\"\r\n          />\r\n \r\n\r\n        <Modal show={getDelete} backdrop=\"static\" keyboard={false}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              Wollen Sie diesen Eintrag wirklich löschen?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"ModalButton\">\r\n            <Button className=\"ModalButton\" onClick={() => setDelete(false)}>\r\n              Abbrechen\r\n            </Button>\r\n            <LinkContainer to={`/protokoll/${myEntries.protokoll}`}>\r\n              <Button\r\n                className=\"ModalButton\"\r\n                onClick={() => deleteEintragFunc(myEntries.id!)}\r\n              >\r\n                OK\r\n              </Button>\r\n            </LinkContainer>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}